{"version":3,"file":"index-EAyH5vnn.js","sources":["../../../../components/search/PageHeader.vue","../../../../components/search/PortfolioSearchList.vue"],"sourcesContent":["<template>\r\n  <div class=\"w-full flex flex-col\">\r\n    <div class=\"w-full flex flex-row items-center justify-start\">\r\n      <SearchInput v-model=\"searchTerm\"/>\r\n    </div>\r\n    <div class=\"w-full flex flex-row gap-[10px] justify-start items-center mt-2 py-2 \">\r\n      <div @click=\"openFilterDrawer\" class=\"cursor-pointer flex flex-row gap-[4px] justify-start items-center\">\r\n        <FilterIcon />\r\n        <span>فیلتر</span>\r\n        <ArrowDownIcon />\r\n      </div>\r\n      <div @click=\"openSortDrawer\" class=\"cursor-pointer flex flex-row gap-[4px] justify-start items-center\">\r\n        <SortIcon />\r\n        <span>مرتب سازی</span>\r\n        <ArrowDownIcon />\r\n      </div>\r\n    </div>\r\n    <FilterPortfolioDrawer @close=\"closeFilterDrawer\" @choose=\"chooseService\" :is-open=\"showFilterDrawer\" />\r\n    <SortPortfolioDrawer @close=\"closeSortDrawer\" @choose=\"chooseSort\" :is-open=\"showSortDrawer\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport SearchInput from \"~/components/main/SearchInput.vue\";\r\nimport FilterIcon from \"~/components/icons/FilterIcon.vue\";\r\nimport SortIcon from \"~/components/icons/SortIcon.vue\";\r\nimport ArrowDownIcon from \"~/components/icons/ArrowDownIcon.vue\";\r\nimport FilterPortfolioDrawer from \"~/components/drawer/FilterPortfolioDrawer.vue\";\r\nimport SortPortfolioDrawer from \"~/components/drawer/SortPortfolioDrawer.vue\";\r\nimport {useSearchStore} from \"~/store/Search\";\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst searchTerm = ref<string>(route.query.term as string ?? '')\r\n\r\nconst searchStore = useSearchStore()\r\n\r\nconst showFilterDrawer = ref<Boolean>(false)\r\nconst showSortDrawer = ref<Boolean>(false)\r\n\r\nconst openFilterDrawer = () => {\r\n  showFilterDrawer.value = true\r\n}\r\n\r\nconst closeFilterDrawer = () => {\r\n  showFilterDrawer.value = false\r\n}\r\n\r\nconst chooseService = async (s: IService) => {\r\n  let query = {\r\n    ...route.query\r\n  }\r\n  delete query.page\r\n  if (s.id == -1) {\r\n    delete query.services\r\n  } else {\r\n    query.services = s.id.toString()\r\n  }\r\n  searchStore.reset()\r\n  await router.replace({ query })\r\n}\r\n\r\nconst openSortDrawer = () => {\r\n  showSortDrawer.value = true\r\n}\r\n\r\nconst closeSortDrawer = () => {\r\n  showSortDrawer.value = false\r\n}\r\n\r\nconst chooseSort = async (s: ISort) => {\r\n  let query = {\r\n    ...route.query\r\n  }\r\n  delete query.page\r\n  switch (s.id) {\r\n    case 1:\r\n      delete query.order_by\r\n      delete query.sort_by\r\n          break\r\n    case 2:\r\n      query.order_by = 'created_at'\r\n      query.sort_by = 'desc'\r\n      break\r\n    case 3:\r\n      query.order_by = 'price'\r\n      query.sort_by = 'asc'\r\n      break\r\n    case 4:\r\n      query.order_by = 'price'\r\n      query.sort_by = 'desc'\r\n      break\r\n    case 5:\r\n      query.order_by = 'discount'\r\n      query.sort_by = 'desc'\r\n      break\r\n  }\r\n  searchStore.reset()\r\n  await router.replace({ query })\r\n}\r\n\r\nconst doSearch = async () => {\r\n  const query = route.query ?? {}\r\n  if (query.page) {\r\n    delete query.page\r\n  }\r\n  query.page = searchStore.page.toString()\r\n  const res = await useCustomFetch('/search', {\r\n    method: \"GET\",\r\n    query: query,\r\n  })\r\n  if (res.data.value) {\r\n    let list = res.data.value ? res.data.value?.data as [] : []\r\n    if (list.length == 0) {\r\n      searchStore.showInfiniteScroll = false\r\n      return\r\n    }\r\n    searchStore.portfolios = [\r\n      ...searchStore.portfolios,\r\n      ...list\r\n    ]\r\n    searchStore.lastPage = res.data.value?.last_page\r\n    setTimeout(() => {\r\n      searchStore.showInfiniteScroll = true\r\n    }, 300)\r\n  }\r\n}\r\n\r\nconst doChangeTerm = async () => {\r\n  let query = {\r\n    ...route.query\r\n  }\r\n  if (!searchTerm.value) {\r\n    delete query.term\r\n  } else {\r\n    query.term = searchTerm.value as string\r\n  }\r\n  await router.replace({ query })\r\n  await doSearch()\r\n}\r\n\r\nconst onChangePage = async () => {\r\n  await doSearch()\r\n}\r\n\r\nconst onChangeTermDebounce = useDebounce(doChangeTerm, 500)\r\nconst onChangePageDebounce = useDebounce(onChangePage, 500)\r\n\r\nwatch(() => route.query, doSearch)\r\nwatch(() => searchTerm.value, onChangeTermDebounce)\r\nwatch(() => searchStore.page, onChangePageDebounce)\r\n\r\nonMounted(() => {\r\n  nextTick(() => doSearch())\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","<template>\r\n  <div class=\"flex flex-col justify-start items-start\">\r\n    <PortfolioItem\r\n        v-for=\"(p,i) in searchStore.portfolios\"\r\n        :key=\"i\"\r\n        :portfolio=\"p\"\r\n    />\r\n    <InfiniteLoading :firstload=\"true\" v-if=\"searchStore.showInfiniteScroll\" class=\"mx-auto\" @infinite=\"paginateDebounce\"/>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport InfiniteLoading from \"v3-infinite-loading\";\r\nimport \"v3-infinite-loading/lib/style.css\";\r\nimport {useSearchStore} from \"~/store/Search\";\r\n\r\nconst searchStore = useSearchStore()\r\n\r\nconst paginate = async () => {\r\n  if (searchStore.page <= searchStore.lastPage) {\r\n    searchStore.paginate()\r\n  }\r\n}\r\n\r\nconst paginateDebounce = useDebounce(paginate, 500)\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"names":["useDebounce"],"mappings":"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"}