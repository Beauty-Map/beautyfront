{"version":3,"file":"RegisterForm-B7P0ysQc.js","sources":["../../../../components/register-drawer/Header.vue","../../../../components/drawer/OtpDrawer.vue","../../../../components/register-drawer/RegisterForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex flex-col justify-center items-center\">\r\n    <div class=\"font-medium text-[24px] leading-[37px] text-[#141414] text-center\">\r\n      عضویت\r\n    </div>\r\n    <div class=\"font-medium text-[13px] leading-[18px] text-[#133C3E] text-center mx-7\">\r\n      برای ثبت نام در بیوتی مپ ایمیل خود را وارد کنید\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","<template>\r\n<div\r\n    class=\"flex flex-col fixed md:hide top-0 bottom-0 px-[17px] overflow-y-scroll w-full duration-700 ease-in-out bg-white z-[99999999]\"\r\n    :class=\"[isOpen ? 'left-0' : 'left-[-100%]']\"\r\n>\r\n  <div class=\"flex flex-col justify-start items-center mt-[40px]\">\r\n    <Header :email=\"email\" @change-email=\"goBack\"/>\r\n    <OtpForm @resend=\"resendOtp\" @validate=\"validate\" v-if=\"isOpen\"/>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {useDrawerStore} from \"~/store/Drawer\";\r\nimport Header from \"~/components/otp-drawer/Header.vue\";\r\nimport OtpForm from \"~/components/otp-drawer/OtpForm.vue\";\r\n\r\nconst emits = defineEmits(['changeEmail', 'resend', 'validate', 'close'])\r\nconst props = defineProps({\r\n  isOpen: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\nconst store = useDrawerStore()\r\n\r\nconst email = ref<String>('')\r\n\r\nconst goBack = () => {\r\n  emits('close')\r\n}\r\n\r\nconst resendOtp = () => {\r\n  emits('resend')\r\n}\r\n\r\nconst validate = (code: string) => {\r\n  emits('validate', code)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","<template>\r\n  <div class=\"w-full overflow-y-auto\">\r\n    <EmailInput title=\"ایمیل\" v-model=\"form.email\"/>\r\n    <PasswordInput title=\"کلمه عبور\" v-model=\"form.password\" class=\"mt-[27px]\"/>\r\n    <PolicyAndRulesButton class=\"mt-[24px]\" v-model=\"form.accept_policy\"/>\r\n    <MainActionButton :disabled=\"loading\" class=\"mt-[24px]\" @click=\"doRegister\">\r\n      <div v-if=\"loading\">\r\n        <LoadingComponent />\r\n      </div>\r\n      <div v-else class=\"text-white text-center text-[20px] leading-[30px]\">ارسال کد تایید</div>\r\n    </MainActionButton>\r\n    <BottomText class=\"mt-[18px]\" @click=\"openLoginModal\" title=\"ورود\"/>\r\n    <OtpDrawer :is-open=\"openDrawer\"\r\n               @close=\"closeDrawerClicked\"\r\n               @change-email=\"changeEmail\"\r\n               @validate=\"validate\"\r\n               @resend=\"resend\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport PolicyAndRulesButton from \"~/components/icons/AuthDrawer/PolicyAndRulesButton.vue\";\r\nimport MainActionButton from \"~/components/button/form/MainActionButton.vue\";\r\nimport BottomText from \"~/components/icons/AuthDrawer/BottomText.vue\";\r\nimport {useDrawerStore} from \"~/store/Drawer\";\r\nimport EmailInput from \"~/components/input/EmailInput.vue\";\r\nimport OtpDrawer from \"~/components/drawer/OtpDrawer.vue\";\r\nimport {useCustomFetch} from \"~/composables/useCustomFetch\";\r\nimport PasswordInput from \"~/components/input/PasswordInput.vue\";\r\nimport LoadingComponent from \"~/components/global/Loading.vue\";\r\nconst app = useNuxtApp()\r\nconst router = useRouter()\r\n\r\nconst store = useDrawerStore()\r\nconst openDrawer = ref(false)\r\nconst loading = ref(false)\r\n\r\nconst form = ref<IRegisterForm>({\r\n  email: '',\r\n  password: '',\r\n  accept_policy: false\r\n})\r\n\r\nconst openDrawerClicked = () => {\r\n  openDrawer.value = true\r\n}\r\n\r\nconst closeDrawerClicked = () => {\r\n  openDrawer.value = false\r\n}\r\n\r\nconst changeEmail = () => {\r\n  openDrawerClicked()\r\n}\r\n\r\nconst validated = () => {\r\n  let validated = true\r\n  if (!form.value.email) {\r\n    app.$toast.error('لطفا ایمیل خود را وارد کنید', {rtl: true})\r\n    validated = false\r\n  }\r\n  if (!form.value.password) {\r\n    app.$toast.error('لطفا پسورد خود را وارد کنید', {rtl: true})\r\n    validated = false\r\n  }\r\n  if (!form.value.accept_policy) {\r\n    app.$toast.error('لطفا تیک گزینه تایید قوانین را بزنید', {rtl: true})\r\n    validated = false\r\n  }\r\n\r\n  return validated\r\n}\r\n\r\nconst doRegister = async () => {\r\n  if (loading.value) return\r\n  if (!validated()) {\r\n    return\r\n  }\r\n  loading.value = true\r\n  const ref = useCookie('referralId', {\r\n    maxAge: 60 * 60 * 24 * 30, // 30 days\r\n    path: '/',\r\n    sameSite: 'lax',\r\n  });\r\n  const data = {\r\n    email: form.value.email,\r\n    password: form.value.password,\r\n    referrer_code: ref.value?.toString(),\r\n  }\r\n  const {$postRequest: postRequest}=app\r\n  postRequest('/auth/register', data)\r\n      .then(async res => {\r\n        app.$toast.success('کد ورود با موفقیت ارسال شد', {rtl: true})\r\n        const email = useCookie('email')\r\n        email.value = form.value.email\r\n        app.$toast.success('کد ورود با موفقیت ارسال شد', {rtl: true})\r\n        if (isMd) {\r\n          await router.push('/register/validate')\r\n        } else {\r\n          openDrawerClicked()\r\n        }\r\n      })\r\n      .catch(err => {\r\n        const errors = Object.values(err.data.errors)\r\n        for (const k in errors) {\r\n          for (const e in errors[k]) {\r\n            app.$toast.error(errors[k][e], {rtl: true,})\r\n          }\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setTimeout(() =>loading.value = false, 500)\r\n      })\r\n}\r\n\r\nconst openLoginModal = () => {\r\n  store.closeAllDrawers()\r\n  store.openLoginDrawer()\r\n}\r\n\r\nconst validate = async (code: string) => {\r\n  const data = {\r\n    email: form.value.email,\r\n    code: code,\r\n  }\r\n  const res = await useCustomFetch('/auth/register/otp', {\r\n    method: \"POST\",\r\n    body: data\r\n  })\r\n  if (res.error.value != null) {\r\n    app.$toast.error('کد تایید صحیح نیست', {rtl: true})\r\n  }\r\n  if (res.data.value != null) {\r\n    app.$toast.success('ایمیل شما تایید شد', {rtl: true})\r\n    if (isMd) {\r\n      await router.push('/')\r\n    } else {\r\n      closeDrawerClicked()\r\n      store.closeAllDrawers()\r\n    }\r\n  }\r\n}\r\n\r\nconst resend = async (code: string) => {\r\n  const data = {\r\n    email: form.value.email,\r\n    password: form.value.password,\r\n  }\r\n  const res = await useCustomFetch('/auth/register', {\r\n    method: \"POST\",\r\n    body: data\r\n  })\r\n  if (res.error.value != null) {\r\n    app.$toast.error('این ایمیل پیشتر ثبت نام کرده است', {rtl: true})\r\n  }\r\n  if (res.data.value != null) {\r\n    const email = useCookie('email')\r\n    email.value = form.value.email\r\n    app.$toast.success('کد ورود با موفقیت ارسال شد', {rtl: true})\r\n    if (isMd) {\r\n      await router.push('/register/validate')\r\n    } else {\r\n      openDrawerClicked()\r\n    }\r\n  }\r\n}\r\n\r\n// const isMd = computed(() => window.screen.width >= 768)\r\nconst isMd = false\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"names":["validated","ref"],"mappings":"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"}