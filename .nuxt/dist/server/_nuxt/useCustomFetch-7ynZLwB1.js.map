{"version":3,"file":"useCustomFetch-7ynZLwB1.js","sources":["../../../../composables/useCustomFetch.ts"],"sourcesContent":["export const useCustomFetch = async (url: string, opts: Object) => {\r\n    const config = useRuntimeConfig()\r\n\r\n    const xsrfToken = useCookie('XSRF-TOKEN')\r\n    let headers = {\r\n        accept: 'application/json',\r\n        ...opts?.headers,\r\n    }\r\n    if (xsrfToken && xsrfToken.value !== null) {\r\n        headers['X-XSRF-TOKEN'] = xsrfToken;\r\n    }\r\n    if (process.server) {\r\n        headers = {\r\n            ...headers,\r\n            ...useRequestHeaders(['cookie']),\r\n            referer: config.public.baseURL\r\n        }\r\n    }\r\n    const token = useCookie('token')\r\n    if (token.value) {\r\n        headers = {\r\n            ...headers,\r\n            'Authorization': `Bearer ${token.value}`,\r\n        }\r\n    }\r\n    return useFetch(url, {\r\n        baseURL: config.public.baseURL,\r\n        headers,\r\n        credentials: 'include',\r\n        ...opts,\r\n    });\r\n}"],"names":[],"mappings":";;AAAa,MAAA,iBAAiB,OAAO,KAAa,SAAiB;AAC/D,QAAM,SAAS;AAET,QAAA,YAAY,UAAU,YAAY;AACxC,MAAI,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,GAAG,6BAAM;AAAA,EAAA;AAET,MAAA,aAAa,UAAU,UAAU,MAAM;AACvC,YAAQ,cAAc,IAAI;AAAA,EAC9B;AACoB;AACN,cAAA;AAAA,MACN,GAAG;AAAA,MACH,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AAAA,MAC/B,SAAS,OAAO,OAAO;AAAA,IAAA;AAAA,EAE/B;AACM,QAAA,QAAQ,UAAU,OAAO;AAC/B,MAAI,MAAM,OAAO;AACH,cAAA;AAAA,MACN,GAAG;AAAA,MACH,iBAAiB,UAAU,MAAM,KAAK;AAAA,IAAA;AAAA,EAE9C;AACA,SAAO,SAAS,KAAK;AAAA,IACjB,SAAS,OAAO,OAAO;AAAA,IACvB;AAAA,IACA,aAAa;AAAA,IACb,GAAG;AAAA,EACN,GAAA,aAAA;AACL;"}