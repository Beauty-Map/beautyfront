{
  "resolvedId": "/home/saeed/w/projects/beautymap/beautyfront/components/input/ChooseCityInput.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"flex flex-col items-start justify-start w-full px-1\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"flex flex-row justify-start items-center text-right h-[38px] w-full rounded-[8px] outline-none focus:outline-none pr-[20px] pl-[20px] placeholder:text-[#A9A7A7]\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"w-full flex flex-row justify-start items-center\"\n}\nconst _hoisted_4 = { class: \"mr-1 text-[#F44336] text-[10px] leading-[12px]\" }\n\nimport ErrorRedIcon from \"~/components/icons/ErrorRedIcon.vue\";\r\nimport ChooseCityDrawer from \"~/components/drawer/ChooseCityDrawer.vue\";\r\nimport {useDrawerStore} from \"~/store/Drawer\";\r\nimport {useAuthStore} from \"~/store/Auth\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ChooseCityInput',\n  props: {\r\n  title: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  modelValue: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n},\n  emits: ['update:modelValue'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit\r\nconst props = __props\r\n\r\nconst store = useDrawerStore()\r\n\r\nconst value = ref<Number>(props.modelValue)\r\nconst errorText = ref<String>('')\r\nconst hasError = ref<Boolean>(false)\r\nconst openDrawer = ref<Boolean>(false)\r\n\r\n\r\nconst auth = useAuthStore()\r\nconst user = ref(auth.user)\r\nconst province = ref<IProvince>()\r\nconst city = ref<ICity>()\r\nif (user.value?.province) {\r\n  province.value = user.value.province\r\n}\r\nif (user.value?.city) {\r\n  city.value = user.value.city\r\n}\r\nconst openDrawerClicked = () => {\r\n  openDrawer.value = true\r\n}\r\n\r\nconst closeDrawerClicked = () => {\r\n  openDrawer.value = false\r\n}\r\n\r\nconst chooseProvinceAndCity = (p: IProvince, c: ICity) => {\r\n  province.value = p\r\n  city.value = c\r\n  emits('update:modelValue', c.id)\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (__props.title)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass([\"text-[14px] leading-[16px] text-right mb-1 font-medium\", [_unref(hasError) ? 'text-[#F44336]' : 'text-[#141414]']])\n        }, _toDisplayString(__props.title), 3))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"h-[40px] w-full rounded-[8px] relative border\", [_unref(hasError) ? 'border-[#F44336]' : 'border-[#133C3E]']]),\n      onClick: openDrawerClicked\n    }, [\n      (_unref(province) && _unref(city))\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(province).name) + \" - \" + _toDisplayString(_unref(city).name), 1))\n        : _createCommentVNode(\"\", true)\n    ], 2),\n    (_unref(hasError))\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createVNode(ErrorRedIcon),\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(errorText)), 1)\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createVNode(ChooseCityDrawer, {\n      \"is-open\": _unref(openDrawer),\n      onClose: closeDrawerClicked,\n      onChoose: chooseProvinceAndCity\n    }, null, 8, [\"is-open\"])\n  ]))\n}\n}\n\n})",
      "start": 1726490134170,
      "end": 1726490134170
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726490134170,
      "end": 1726490134170,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726490134170,
      "end": 1726490134170,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726490134170,
      "end": 1726490134170,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726490134170,
      "end": 1726490134170,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"flex flex-col items-start justify-start w-full px-1\" };\nconst _hoisted_2 = {\n  key: 0,\n  class: \"flex flex-row justify-start items-center text-right h-[38px] w-full rounded-[8px] outline-none focus:outline-none pr-[20px] pl-[20px] placeholder:text-[#A9A7A7]\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"w-full flex flex-row justify-start items-center\"\n};\nconst _hoisted_4 = { class: \"mr-1 text-[#F44336] text-[10px] leading-[12px]\" };\nimport ErrorRedIcon from \"~/components/icons/ErrorRedIcon.vue\";\nimport ChooseCityDrawer from \"~/components/drawer/ChooseCityDrawer.vue\";\nimport { useDrawerStore } from \"~/store/Drawer\";\nimport { useAuthStore } from \"~/store/Auth\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ChooseCityInput\",\n  props: {\n    title: {\n      type: String,\n      default: \"\"\n    },\n    modelValue: {\n      type: Number,\n      default: 0\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n    const emits = __emit;\n    const props = __props;\n    const store = useDrawerStore();\n    const value = ref(props.modelValue);\n    const errorText = ref(\"\");\n    const hasError = ref(false);\n    const openDrawer = ref(false);\n    const auth = useAuthStore();\n    const user = ref(auth.user);\n    const province = ref();\n    const city = ref();\n    if (user.value?.province) {\n      province.value = user.value.province;\n    }\n    if (user.value?.city) {\n      city.value = user.value.city;\n    }\n    const openDrawerClicked = () => {\n      openDrawer.value = true;\n    };\n    const closeDrawerClicked = () => {\n      openDrawer.value = false;\n    };\n    const chooseProvinceAndCity = (p, c) => {\n      province.value = p;\n      city.value = c;\n      emits(\"update:modelValue\", c.id);\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        __props.title ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass([\"text-[14px] leading-[16px] text-right mb-1 font-medium\", [_unref(hasError) ? \"text-[#F44336]\" : \"text-[#141414]\"]])\n        }, _toDisplayString(__props.title), 3)) : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"h-[40px] w-full rounded-[8px] relative border\", [_unref(hasError) ? \"border-[#F44336]\" : \"border-[#133C3E]\"]]),\n          onClick: openDrawerClicked\n        }, [\n          _unref(province) && _unref(city) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(province).name) + \" - \" + _toDisplayString(_unref(city).name), 1)) : _createCommentVNode(\"\", true)\n        ], 2),\n        _unref(hasError) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createVNode(ErrorRedIcon),\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(errorText)), 1)\n        ])) : _createCommentVNode(\"\", true),\n        _createVNode(ChooseCityDrawer, {\n          \"is-open\": _unref(openDrawer),\n          onClose: closeDrawerClicked,\n          onChoose: chooseProvinceAndCity\n        }, null, 8, [\"is-open\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1726490134170,
      "end": 1726490134217,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/saeed/w/projects/beautymap/beautyfront/components/input/ChooseCityInput.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"flex flex-col items-start justify-start w-full px-1\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"flex flex-row justify-start items-center text-right h-[38px] w-full rounded-[8px] outline-none focus:outline-none pr-[20px] pl-[20px] placeholder:text-[#A9A7A7]\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"w-full flex flex-row justify-start items-center\"\n}\nconst _hoisted_4 = { class: \"mr-1 text-[#F44336] text-[10px] leading-[12px]\" }\n\nimport ErrorRedIcon from \"~/components/icons/ErrorRedIcon.vue\";\r\nimport ChooseCityDrawer from \"~/components/drawer/ChooseCityDrawer.vue\";\r\nimport {useDrawerStore} from \"~/store/Drawer\";\r\nimport {useAuthStore} from \"~/store/Auth\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ChooseCityInput',\n  props: {\r\n  title: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  modelValue: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n},\n  emits: ['update:modelValue'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit\r\nconst props = __props\r\n\r\nconst store = useDrawerStore()\r\n\r\nconst value = ref<Number>(props.modelValue)\r\nconst errorText = ref<String>('')\r\nconst hasError = ref<Boolean>(false)\r\nconst openDrawer = ref<Boolean>(false)\r\n\r\n\r\nconst auth = useAuthStore()\r\nconst user = ref(auth.user)\r\nconst province = ref<IProvince>()\r\nconst city = ref<ICity>()\r\nif (user.value?.province) {\r\n  province.value = user.value.province\r\n}\r\nif (user.value?.city) {\r\n  city.value = user.value.city\r\n}\r\nconst openDrawerClicked = () => {\r\n  openDrawer.value = true\r\n}\r\n\r\nconst closeDrawerClicked = () => {\r\n  openDrawer.value = false\r\n}\r\n\r\nconst chooseProvinceAndCity = (p: IProvince, c: ICity) => {\r\n  province.value = p\r\n  city.value = c\r\n  emits('update:modelValue', c.id)\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (__props.title)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass([\"text-[14px] leading-[16px] text-right mb-1 font-medium\", [_unref(hasError) ? 'text-[#F44336]' : 'text-[#141414]']])\n        }, _toDisplayString(__props.title), 3))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"h-[40px] w-full rounded-[8px] relative border\", [_unref(hasError) ? 'border-[#F44336]' : 'border-[#133C3E]']]),\n      onClick: openDrawerClicked\n    }, [\n      (_unref(province) && _unref(city))\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(province).name) + \" - \" + _toDisplayString(_unref(city).name), 1))\n        : _createCommentVNode(\"\", true)\n    ], 2),\n    (_unref(hasError))\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createVNode(ErrorRedIcon),\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(errorText)), 1)\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createVNode(ChooseCityDrawer, {\n      \"is-open\": _unref(openDrawer),\n      onClose: closeDrawerClicked,\n      onChoose: chooseProvinceAndCity\n    }, null, 8, [\"is-open\"])\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726490134217,
      "end": 1726490134217,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726490134217,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726490134218,
      "end": 1726490134218,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = { class: \"flex flex-col items-start justify-start w-full px-1\" };\nconst _hoisted_2 = {\n  key: 0,\n  class: \"flex flex-row justify-start items-center text-right h-[38px] w-full rounded-[8px] outline-none focus:outline-none pr-[20px] pl-[20px] placeholder:text-[#A9A7A7]\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"w-full flex flex-row justify-start items-center\"\n};\nconst _hoisted_4 = { class: \"mr-1 text-[#F44336] text-[10px] leading-[12px]\" };\nimport ErrorRedIcon from \"~/components/icons/ErrorRedIcon.vue\";\nimport ChooseCityDrawer from \"~/components/drawer/ChooseCityDrawer.vue\";\nimport { useDrawerStore } from \"~/store/Drawer\";\nimport { useAuthStore } from \"~/store/Auth\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ChooseCityInput\",\n  props: {\n    title: {\n      type: String,\n      default: \"\"\n    },\n    modelValue: {\n      type: Number,\n      default: 0\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n    const emits = __emit;\n    const props = __props;\n    const store = useDrawerStore();\n    const value = ref(props.modelValue);\n    const errorText = ref(\"\");\n    const hasError = ref(false);\n    const openDrawer = ref(false);\n    const auth = useAuthStore();\n    const user = ref(auth.user);\n    const province = ref();\n    const city = ref();\n    if (user.value?.province) {\n      province.value = user.value.province;\n    }\n    if (user.value?.city) {\n      city.value = user.value.city;\n    }\n    const openDrawerClicked = () => {\n      openDrawer.value = true;\n    };\n    const closeDrawerClicked = () => {\n      openDrawer.value = false;\n    };\n    const chooseProvinceAndCity = (p, c) => {\n      province.value = p;\n      city.value = c;\n      emits(\"update:modelValue\", c.id);\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        __props.title ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass([\"text-[14px] leading-[16px] text-right mb-1 font-medium\", [_unref(hasError) ? \"text-[#F44336]\" : \"text-[#141414]\"]])\n        }, _toDisplayString(__props.title), 3)) : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"h-[40px] w-full rounded-[8px] relative border\", [_unref(hasError) ? \"border-[#F44336]\" : \"border-[#133C3E]\"]]),\n          onClick: openDrawerClicked\n        }, [\n          _unref(province) && _unref(city) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_unref(province).name) + \" - \" + _toDisplayString(_unref(city).name), 1)) : _createCommentVNode(\"\", true)\n        ], 2),\n        _unref(hasError) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createVNode(ErrorRedIcon),\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(errorText)), 1)\n        ])) : _createCommentVNode(\"\", true),\n        _createVNode(ChooseCityDrawer, {\n          \"is-open\": _unref(openDrawer),\n          onClose: closeDrawerClicked,\n          onChoose: chooseProvinceAndCity\n        }, null, 8, [\"is-open\"])\n      ]);\n    };\n  }\n});\n",
      "start": 1726490134218,
      "end": 1726490134224,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingsrS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACppxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjtJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACplJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1726490134224,
      "end": 1726490134224,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726490134224,
      "end": 1726490134224,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1726490134224,
      "end": 1726490134225,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1726490134225,
      "end": 1726490134225,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726490134225,
      "end": 1726490134225,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726490134225,
      "end": 1726490134225,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726490134225,
      "end": 1726490134225,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726490134225,
      "end": 1726490134225,
      "order": "normal"
    }
  ]
}
