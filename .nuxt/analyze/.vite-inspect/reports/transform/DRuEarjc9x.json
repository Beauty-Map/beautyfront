{
  "resolvedId": "/home/saeed/w/projects/beautymap/beautyfront/plugins/5. ofetch.client.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {ofetch} from \"ofetch\";\r\n\r\nexport default defineNuxtPlugin((app) => {\r\n    const token = useCookie(\"token\")\r\n    const baseUrl = 'https://api.beautymap.ir/api'\r\n    // const baseUrl = 'http://127.0.0.1:8000/api'\r\n\r\n    const get = async (url: RequestInfo) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"GET\",\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        })\r\n    const post = async (url: RequestInfo, body: Object | null) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"POST\",\r\n            body: body,\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        },)\r\n    const put = async (url: RequestInfo, body: Object | null) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"PUT\",\r\n            body: body,\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        },)\r\n    const destroy = async (url: RequestInfo, body: Object | null) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"DELETE\",\r\n            body: body,\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        },)\r\n    app.provide('getRequest', (url: RequestInfo) => get(url))\r\n    app.provide('postRequest', (url: RequestInfo, data: Object) => post(url, data))\r\n    app.provide('putRequest', (url: RequestInfo, data: Object) => put(url, data))\r\n    app.provide('deleteRequest', (url: RequestInfo, data: Object) => destroy(url, data))\r\n})",
      "start": 1726490129594,
      "end": 1726490129946,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1726490129946,
      "end": 1726490129946,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1726490129946,
      "end": 1726490129946,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1726490129946,
      "end": 1726490129946,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1726490129946,
      "end": 1726490129946,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { ofetch } from \"ofetch\";\nexport default defineNuxtPlugin((app) => {\n  const token = useCookie(\"token\");\n  const baseUrl = \"https://api.beautymap.ir/api\";\n  const get = async (url) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"GET\",\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  const post = async (url, body) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"POST\",\n      body,\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  const put = async (url, body) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"PUT\",\n      body,\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  const destroy = async (url, body) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"DELETE\",\n      body,\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  app.provide(\"getRequest\", (url) => get(url));\n  app.provide(\"postRequest\", (url, data) => post(url, data));\n  app.provide(\"putRequest\", (url, data) => put(url, data));\n  app.provide(\"deleteRequest\", (url, data) => destroy(url, data));\n});\n",
      "start": 1726490129946,
      "end": 1726490129950,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/saeed/w/projects/beautymap/beautyfront/plugins/5. ofetch.client.ts"
        ],
        "sourcesContent": [
          "import {ofetch} from \"ofetch\";\r\n\r\nexport default defineNuxtPlugin((app) => {\r\n    const token = useCookie(\"token\")\r\n    const baseUrl = 'https://api.beautymap.ir/api'\r\n    // const baseUrl = 'http://127.0.0.1:8000/api'\r\n\r\n    const get = async (url: RequestInfo) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"GET\",\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        })\r\n    const post = async (url: RequestInfo, body: Object | null) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"POST\",\r\n            body: body,\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        },)\r\n    const put = async (url: RequestInfo, body: Object | null) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"PUT\",\r\n            body: body,\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        },)\r\n    const destroy = async (url: RequestInfo, body: Object | null) => await ofetch(url,\r\n        {\r\n            baseURL: baseUrl,\r\n            method: \"DELETE\",\r\n            body: body,\r\n            parseResponse: JSON.parse,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token.value ?? ''}`\r\n            }\r\n        },)\r\n    app.provide('getRequest', (url: RequestInfo) => get(url))\r\n    app.provide('postRequest', (url: RequestInfo, data: Object) => post(url, data))\r\n    app.provide('putRequest', (url: RequestInfo, data: Object) => put(url, data))\r\n    app.provide('deleteRequest', (url: RequestInfo, data: Object) => destroy(url, data))\r\n})"
        ],
        "mappings": "AAAA,SAAQ,cAAa;AAErB,eAAe,iBAAiB,CAAC,QAAQ;AACrC,QAAM,QAAQ,UAAU,OAAO;AAC/B,QAAM,UAAU;AAGhB,QAAM,MAAM,OAAO,QAAqB,MAAM;AAAA,IAAO;AAAA,IACjD;AAAA,MACI,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,eAAe,KAAK;AAAA,MACpB,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,iBAAiB,UAAU,MAAM,SAAS,EAAE;AAAA,MAChD;AAAA,IACJ;AAAA,EAAC;AACL,QAAM,OAAO,OAAO,KAAkB,SAAwB,MAAM;AAAA,IAAO;AAAA,IACvE;AAAA,MACI,SAAS;AAAA,MACT,QAAQ;AAAA,MACR;AAAA,MACA,eAAe,KAAK;AAAA,MACpB,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,iBAAiB,UAAU,MAAM,SAAS,EAAE;AAAA,MAChD;AAAA,IACJ;AAAA,EAAE;AACN,QAAM,MAAM,OAAO,KAAkB,SAAwB,MAAM;AAAA,IAAO;AAAA,IACtE;AAAA,MACI,SAAS;AAAA,MACT,QAAQ;AAAA,MACR;AAAA,MACA,eAAe,KAAK;AAAA,MACpB,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,iBAAiB,UAAU,MAAM,SAAS,EAAE;AAAA,MAChD;AAAA,IACJ;AAAA,EAAE;AACN,QAAM,UAAU,OAAO,KAAkB,SAAwB,MAAM;AAAA,IAAO;AAAA,IAC1E;AAAA,MACI,SAAS;AAAA,MACT,QAAQ;AAAA,MACR;AAAA,MACA,eAAe,KAAK;AAAA,MACpB,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,iBAAiB,UAAU,MAAM,SAAS,EAAE;AAAA,MAChD;AAAA,IACJ;AAAA,EAAE;AACN,MAAI,QAAQ,cAAc,CAAC,QAAqB,IAAI,GAAG,CAAC;AACxD,MAAI,QAAQ,eAAe,CAAC,KAAkB,SAAiB,KAAK,KAAK,IAAI,CAAC;AAC9E,MAAI,QAAQ,cAAc,CAAC,KAAkB,SAAiB,IAAI,KAAK,IAAI,CAAC;AAC5E,MAAI,QAAQ,iBAAiB,CAAC,KAAkB,SAAiB,QAAQ,KAAK,IAAI,CAAC;AACvF,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1726490129950,
      "end": 1726490129950,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1726490129950,
      "end": 1726490129950,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1726490129950,
      "end": 1726490129950,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1726490129950,
      "end": 1726490129950,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726490129950,
      "end": 1726490129950,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1726490129950,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1726490129951,
      "end": 1726490129951,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtPlugin } from '#app/nuxt';\nimport { useCookie } from '#app/composables/cookie';\nimport { ofetch } from \"ofetch\";\nexport default defineNuxtPlugin((app) => {\n  const token = useCookie(\"token\");\n  const baseUrl = \"https://api.beautymap.ir/api\";\n  const get = async (url) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"GET\",\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  const post = async (url, body) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"POST\",\n      body,\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  const put = async (url, body) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"PUT\",\n      body,\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  const destroy = async (url, body) => await ofetch(\n    url,\n    {\n      baseURL: baseUrl,\n      method: \"DELETE\",\n      body,\n      parseResponse: JSON.parse,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${token.value ?? \"\"}`\n      }\n    }\n  );\n  app.provide(\"getRequest\", (url) => get(url));\n  app.provide(\"postRequest\", (url, data) => post(url, data));\n  app.provide(\"putRequest\", (url, data) => put(url, data));\n  app.provide(\"deleteRequest\", (url, data) => destroy(url, data));\n});\n",
      "start": 1726490129951,
      "end": 1726490129953,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1726490129954,
      "end": 1726490129955,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1726490129955,
      "end": 1726490129955,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1726490129955,
      "end": 1726490129955,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1726490129955,
      "end": 1726490129955,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1726490129955,
      "end": 1726490129955,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1726490129955,
      "end": 1726490129955,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1726490129955,
      "end": 1726490129955,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1726490129955,
      "end": 1726490129955,
      "order": "normal"
    }
  ]
}
